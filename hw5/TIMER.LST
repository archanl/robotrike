8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    07:39:29  11/20/;3  PAGE    1


DOS 5.0 (038-N) 8086/87/88/186 MACRO ASSEMBLER V3.1 ASSEMBLY OF MODULE TIMER
OBJECT MODULE PLACED IN TIMER.OBJ
ASSEMBLER INVOKED BY:  C:\UTIL\ASM86.EXE TIMER.ASM M1 EP DB


LOC  OBJ                  LINE     SOURCE

                             1         NAME    TIMER
                             2     
                             3     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             4     ;                                                                            ;
                             5     ;                                    TIMER                                   ;
                             6     ;               Timer Initialization and Interrupt Setup Functions           ;
                             7     ;                                   EE/CS 51                                 ;
                             8     ;                                 Archan Luhar                               ;
                             9     ;                                 TA: Joe Greef                              ;
                            10     ;                                                                            ;
                            11     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                            12     
                            13     ; This file contains functions to initialize the timers and their event
                            14     ; handlers.
                            15     ;
                            16     ; The included public functions are:
                            17     ;   - SetDisplayTimerEventHandler/InstallTimer2EventHandler
                            18     ;           Installs the event handler for timer 2 into the vector table.
                            19     ;   - SetDisplayTimerInterrupt/InitTimer
                            20     ;           Initializes the timers and their interrupts
                            21     ; The included private functions are:
                            22     ;   - Timer2EventHandler
                            23     ;           Calls all necessary external event handlers that rely on timer 2
                            24     ;
                            25     ;
                            26     ; Revision History:
                            27     ;       11/12/2013      Archan Luhar    Adopted Glen George's timer code
                            28     ;                                       for the display assignment.
                            29     ;       11/18/2013      Archan Luhar    Cleaned up formatting and commenting.
                            30     
                            31     ; Local include files
                            32 +1  $INCLUDE(timer.inc)     ; Contains various addresses and values related to
                      =1    33     ; Timer Interrupt Vector
  0013                =1    34     Tmr2Vec         EQU     19              ; Timer 2
                      =1    35     
                      =1    36     
                      =1    37     ; Interrupt Controller Addresses
  FF32                =1    38     INTCtrlrCtrl    EQU     0FF32H          ; Timer interrupt controller
  FF22                =1    39     INTCtrlrEOI     EQU     0FF22H          ; Interrupt controller EOI register
                      =1    40     
                      =1    41     ; Interrupt Controller Register Values
  0001                =1    42     INTCtrlrCVal    EQU     00001H          ;0000 0000 0000 ----  reserved
                      =1    43                                             ;---- ---- ---- 0---  enable interrupt
                      =1    44                                             ;---- ---- ---- -001  timer priority
                      =1    45     
  0008                =1    46     TimerEOI        EQU     00008H          ; Timer EOI command for all timers
                      =1    47     
                      =1    48     
                      =1    49     ; Timer Addresses
  FF66                =1    50     Tmr2Ctrl        EQU     0FF66H          ; Timer 2 Control Register
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    07:39:29  11/20/;3  PAGE    2


LOC  OBJ                  LINE     SOURCE

  FF62                =1    51     Tmr2MaxCnt      EQU     0FF62H          ; Timer 2 Max Count A Register
  FF60                =1    52     Tmr2Count       EQU     0FF60H          ; Timer 2 Count Register
                      =1    53     
                      =1    54     ; Timer Control Register Value
  E001                =1    55     Tmr2CtrlVal     EQU     0E001H          ;1--- ---- ---- ----  enable timer
                      =1    56                                             ;-1-- ---- ---- ----  write to control
                      =1    57                                             ;--1- ---- ---- ----  enable interrupts
                      =1    58                                             ;---- 0000 00-0 000-  reserved
                      =1    59                                             ;---0 ---- --0- ----  read only
                      =1    60                                             ;---- ---- ---- ---1  continuous mode
                      =1    61     
                      =1    62     
                      =1    63     ; Timing Definitions
  0900                =1    64     COUNTS_PER_MS   EQU     2304            ; Number of timer counts per 1 ms
                      =1    65                                             ; (assumes 18.432 MHz clock)
                            66                             ; interrupt and timer behavior
                            67     
                            68     
                            69     CGROUP  GROUP   CODE
----                        70     CODE    SEGMENT PUBLIC 'CODE'
                            71             ASSUME  CS:CGROUP
                            72     
                            73     ; External references
                            74     ; All non-meta timer event handlers should be listed here
                            75         EXTRN   DisplayTimerEventHandler:NEAR
                            76         EXTRN   SwitchesTimerEventHandler:NEAR
                            77     
                            78     
                            79     ; InitTimer
                            80     ;
                            81     ; Description:      Calls functions that initialize timers and their event
                            82     ;                   handlers. MUST call this to use display and keypad routines.
                            83     ;
                            84     ; Operation:        Calls the event handler installer and interrupt setter.
                            85     ;
                            86     ; Arguments:        None.
                            87     ; Return Value:     None.
                            88     ;
                            89     ; Local Variables:  None.
                            90     ; Shared Variables: None.
                            91     ; Global Variables: None.
                            92     ;
                            93     ; Input:            None.
                            94     ; Output:           None.
                            95     ;
                            96     ; Error Handling:   None.
                            97     ;
                            98     ; Algorithms:       None.
                            99     ; Data Structures:  None.
                           100     ;
                           101     ; Registers Used:   None.
                           102     ; Stack Depth:      1 NEAR call.
                           103     ;
                           104     ; Author:           Archan Luhar
                           105     ; Last Modified:    Nov. 20, 2013
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    07:39:29  11/20/;3  PAGE    3


LOC  OBJ                  LINE     SOURCE

0000                       106     InitTimer                   PROC    NEAR
                           107                                 PUBLIC  InitTimer
                           108     
0000 E80400                109         CALL InstallTimerEventHandlers
0003 E82A00                110         CALL SetTimerInterrupts
                           111         
0006 C3                    112         RET
                           113     
                           114     InitTimer                   ENDP
                           115     
                           116     
                           117     
                           118     ; InstallTimerEventHandlers
                           119     ;
                           120     ; IMPORTANT NOTE:   CURRENLTY ONLY TIMER 2.
                           121     ;
                           122     ; Description:      Installs the timer interrupt event handlers into the
                           123     ;                   interrupt vector table.
                           124     ;
                           125     ; Operation:        Writes the segment and and offset of the handler to the
                           126     ;                   appropriate slot in the interrupt vector table.
                           127     ;
                           128     ; Arguments:        None.
                           129     ; Return Value:     None.
                           130     ;
                           131     ; Local Variables:  None.
                           132     ; Shared Variables: None.
                           133     ; Global Variables: None.
                           134     ;
                           135     ; Input:            None.
                           136     ; Output:           None.
                           137     ;
                           138     ; Error Handling:   None.
                           139     ;
                           140     ; Algorithms:       None.
                           141     ; Data Structures:  None.
                           142     ;
                           143     ; Registers Used:   None.
                           144     ; Stack Depth:      2 words.
                           145     ;
                           146     ; Author:           Glen George, Archan Luhar
                           147     ; Last Modified:    Nov. 18, 2013
                           148     
0007                       149     InstallTimerEventHandlers   PROC    NEAR
                           150                                 PUBLIC  InstallTimerEventHandlers
                           151     
0007 50                    152         PUSH AX                     ; Save Registers
0008 06                    153         PUSH ES
                           154     
0009 33C0                  155         XOR     AX, AX              ; Clear ES (interrupt vectors are in segment 0)
000B 8EC0                  156         MOV     ES, AX
                           157                                     ; Write the vector
000D 26C7064C001E00 R      158         MOV     ES: WORD PTR (4 * Tmr2Vec), OFFSET(Timer2EventHandler)
0014 26C7064E00---- R      159         MOV     ES: WORD PTR (4 * Tmr2Vec + 2), SEG(Timer2EventHandler)
                           160     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    07:39:29  11/20/;3  PAGE    4


LOC  OBJ                  LINE     SOURCE

001B 07                    161         POP ES
001C 58                    162         POP AX
001D C3                    163         RET
                           164     
                           165     InstallTimerEventHandlers   ENDP
                           166     
                           167     
                           168     ; Timer2EventHandler
                           169     ;
                           170     ; Description:      Handles the timer 2 interrupts. Calls the display handler.
                           171     ;
                           172     ; Operation:        Saves necessary registers.
                           173     ;                   Calls the display timer event handler.
                           174     ;                   Sends a timer EOI to the interrupt control register.
                           175     ;                   Then returns using IRET.
                           176     ;
                           177     ; Arguments:        None.
                           178     ; Return Value:     None.
                           179     ;
                           180     ; Local Variables:  None.
                           181     ; Shared Variables: None.
                           182     ; Global Variables: None.
                           183     ;
                           184     ; Input:            None.
                           185     ; Output:           None.
                           186     ;
                           187     ; Error Handling:   None.
                           188     ;
                           189     ; Algorithms:       None.
                           190     ; Data Structures:  None.
                           191     ;
                           192     ; Registers Used:   None.
                           193     ; Stack Depth:      0 words
                           194     ;
                           195     ; Author:           Glen George, Archan Luhar
                           196     ; Last Modified:    Nov. 18, 2013
                           197     
001E                       198     Timer2EventHandler          PROC    NEAR
                           199     
001E 52                    200         PUSH DX
001F 50                    201         PUSH AX
                           202     
0020 E80000         E      203         CALL DisplayTimerEventHandler
0023 E80000         E      204         CALL SwitchesTimerEventHandler
                           205     
0026 BA22FF                206         MOV DX, INTCtrlrEOI             ; Send timer EOI
0029 B80800                207         MOV AX, TimerEOI
002C EE                    208         OUT DX, AL
                           209     
002D 58                    210         POP AX
002E 5A                    211         POP DX
002F CF                    212         IRET                            ; IRET must be used in interrupt handler
                           213     
                           214     Timer2EventHandler          ENDP
                           215     
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    07:39:29  11/20/;3  PAGE    5


LOC  OBJ                  LINE     SOURCE

                           216     
                           217     ; SetTimerInterrupts
                           218     ;
                           219     ; IMPORTANT NOTE:   CURRENLTY ONLY INITIALIZES TIMER 2.
                           220     ;
                           221     ; Description:      Initialize the 80188 Timers.  The timers are initialized
                           222     ;                   to generate interrupts every MS_PER_SEC milliseconds.
                           223     ;                   The interrupt controller is also initialized to allow the
                           224     ;                   timer interrupts.  Timer #2 is used to generate the
                           225     ;                   interrupts for the display handler.
                           226     ;
                           227     ; Operation:        The appropriate values are written to the timer control
                           228     ;                   registers in the PCB.  Also, the timer count registers
                           229     ;                   are reset to zero.  Finally, the interrupt controller is
                           230     ;                   setup to accept timer interrupts and any pending
                           231     ;                   interrupts are cleared by sending a TimerEOI to the
                           232     ;                   interrupt controller.
                           233     ;
                           234     ; Arguments:        None.
                           235     ; Return Value:     None.
                           236     ;
                           237     ; Local Variables:  None.
                           238     ; Shared Variables: None.
                           239     ; Global Variables: None.
                           240     ;
                           241     ; Input:            None.
                           242     ; Output:           None.
                           243     ;
                           244     ; Error Handling:   None.
                           245     ;
                           246     ; Algorithms:       None.
                           247     ; Data Structures:  None.
                           248     ;
                           249     ; Registers Used:   None.
                           250     ; Stack Depth:      0 words
                           251     ;
                           252     ; Author:           Glen George, Archan Luhar
                           253     ; Last Modified:    Nov. 18, 2013
                           254     
0030                       255     SetTimerInterrupts          PROC    NEAR
                           256                                 PUBLIC  SetTimerInterrupts
                           257     
0030 50                    258             PUSH AX                     ; Save registers
0031 52                    259             PUSH DX
                           260     
0032 BA60FF                261             MOV     DX, Tmr2Count       ; Initialize the count register to 0
0035 33C0                  262             XOR     AX, AX
0037 EE                    263             OUT     DX, AL
                           264     
0038 BA62FF                265             MOV     DX, Tmr2MaxCnt      ; Setup max count for 1ms counts
003B B80009                266             MOV     AX, COUNTS_PER_MS
003E EE                    267             OUT     DX, AL
                           268     
003F BA66FF                269             MOV     DX, Tmr2Ctrl        ; Setup control register, enable interrupts
0042 B801E0                270             MOV     AX, Tmr2CtrlVal
8086/87/88/186 MACRO ASSEMBLER    TIMER                                                    07:39:29  11/20/;3  PAGE    6


LOC  OBJ                  LINE     SOURCE

0045 EE                    271             OUT     DX, AL
                           272                                         ; Initialize interrupt controller for timers
0046 BA32FF                273             MOV     DX, INTCtrlrCtrl    ; Setup the interrupt control register
0049 B80100                274             MOV     AX, INTCtrlrCVal
004C EE                    275             OUT     DX, AL
                           276     
004D BA22FF                277             MOV     DX, INTCtrlrEOI     ; Send a timer EOI (to clear out controller)
0050 B80800                278             MOV     AX, TimerEOI
0053 EE                    279             OUT     DX, AL
                           280             
0054 5A                    281             POP DX                      ; Restore registers
0055 58                    282             POP AX
                           283     
0056 C3                    284             RET
                           285     
                           286     SetTimerInterrupts          ENDP
                           287     
                           288     
----                       289     CODE ENDS
                           290         END

ASSEMBLY COMPLETE, NO ERRORS FOUND
